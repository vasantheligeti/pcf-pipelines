resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: terraform-state
  type: s3
  source:
    disable_ssl: false
    access_key_id: {{aws_access_key_id}}
    secret_access_key: {{aws_secret_access_key}}
    endpoint: {{S3_ENDPOINT}}
    bucket: {{S3_OUTPUT_BUCKET}}
    region_name: {{aws_region}}
    versioned_file: terraform.tfstate

- name: pivnet-elastic-runtime
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: elastic-runtime
    product_version: {{ert_major_minor_version}}
    sort_by: semver

- name: pcf-pipelines
  type: git
  source:
    uri: git@github.com:vasantheligeti/pcf-pipelines.git
    branch: master
    private_key: {{git_private_key}}

- name: pivnet-opsmgr
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: ops-manager
    product_version: {{opsman_major_minor_version}}
    sort_by: semver

jobs:
- name: bootstrap-terraform-state
  serial_groups: [terraform]
  plan:
  - get: pcf-pipelines
  - task: create-terraform-state
    params:
      S3_BUCKET_TERRAFORM: {{S3_OUTPUT_BUCKET}}
      S3_ENDPOINT: {{S3_ENDPOINT}}
      S3_REGION: {{aws_region}}
      AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
    file: pcf-pipelines/tasks/create-initial-terraform-state/task.yml

- name: create-infrastructure
  serial_groups: [terraform]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: terraform-state
    - get: pivnet-opsmgr
      params:
        globs: ["*AWS.yml"]
  - task: find-ami
    params:
      REGION: {{aws_region}}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: czero/rootfs
      inputs:
      - name: pivnet-opsmgr
      outputs:
      - name: ami
      params:
        REGION:
      run:
        path: bash
        args:
        - -c
        - |
          ami=$(grep $REGION pivnet-opsmgr/*.yml | cut -d' ' -f2)
          echo $ami > ami/ami
  - task: create-infrastructure
    file: pcf-pipelines/install-pcf/aws/tasks/prepare-aws/task.yml
    params:
      DB_MASTER_USERNAME: {{db_master_username}}
      DB_MASTER_PASSWORD: {{db_master_password}}
      TERRAFORM_PREFIX: {{terraform_prefix}}
      aws_access_key_id: {{aws_access_key_id}}
      aws_secret_access_key: {{aws_secret_access_key}}
      aws_key_name: {{aws_key_name}}
      aws_cert_arn: {{aws_cert_arn}}
      amis_nat: {{amis_nat}}
      aws_region: {{aws_region}}
      aws_az1: {{aws_az1}}
      route53_zone_id: {{ROUTE_53_ZONE_ID}}
      vpc_cidr: {{vpc_cidr}}
      public_subnet_cidr_az1: {{public_subnet_cidr_az1}}
      ert_subnet_cidr_az1: {{ert_subnet_cidr_az1}}
      services_subnet_cidr_az1: {{services_subnet_cidr_az1}}
      dynamic_services_subnet_cidr_az1: {{dynamic_services_subnet_cidr_az1}}
      infra_subnet_cidr_az1: {{infra_subnet_cidr_az1}}
      rds_subnet_cidr_az1: {{rds_subnet_cidr_az1}}
      opsman_ip_az1: {{opsman_ip_az1}}
      nat_ip_az1: {{nat_ip_az1}}
      OPSMAN_ALLOW_SSH_CIDR_RANGES: {{opsman_allow_ssh_cidr_ranges}}
      OPSMAN_ALLOW_HTTPS_CIDR_RANGES: {{opsman_allow_https_cidr_ranges}}
    ensure:
      put: terraform-state
      params:
        file: terraform-state-output/terraform.tfstate

  - task: prepare-rds
    file: pcf-pipelines/install-pcf/aws/tasks/prepare-rds/task.yml
    params:
      PEM: {{PEM}}
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      DB_APP_USAGE_SERVICE_USERNAME: {{db_app_usage_service_username}}
      DB_APP_USAGE_SERVICE_PASSWORD: {{db_app_usage_service_password}}
      DB_AUTOSCALE_USERNAME: {{db_autoscale_username}}
      DB_AUTOSCALE_PASSWORD: {{db_autoscale_password}}
      DB_DIEGO_USERNAME: {{db_diego_username}}
      DB_DIEGO_PASSWORD: {{db_diego_password}}
      DB_NOTIFICATIONS_USERNAME: {{db_notifications_username}}
      DB_NOTIFICATIONS_PASSWORD: {{db_notifications_password}}
      DB_ROUTING_USERNAME: {{db_routing_username}}
      DB_ROUTING_PASSWORD: {{db_routing_password}}
      DB_UAA_USERNAME: {{db_uaa_username}}
      DB_UAA_PASSWORD: {{db_uaa_password}}
      DB_CCDB_USERNAME: {{db_ccdb_username}}
      DB_CCDB_PASSWORD: {{db_ccdb_password}}
      DB_ACCOUNTDB_USERNAME: {{db_accountdb_username}}
      DB_ACCOUNTDB_PASSWORD: {{db_accountdb_password}}
      DB_NETWORKPOLICYSERVERDB_USERNAME: {{db_networkpolicyserverdb_username}}
      DB_NETWORKPOLICYSERVERDB_PASSWORD: {{db_networkpolicyserverdb_password}}
      DB_NFSVOLUMEDB_USERNAME: {{db_nfsvolumedb_username}}
      DB_NFSVOLUMEDB_PASSWORD: {{db_nfsvolumedb_password}}
      DB_LOCKET_USERNAME: {{db_locket_username}}
      DB_LOCKET_PASSWORD: {{db_locket_password}}
      DB_SILK_USERNAME: {{db_silk_username}}
      DB_SILK_PASSWORD: {{db_silk_password}}

- name: configure-director
  serial_groups: [opsman]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: terraform-state
      trigger: true
      passed: [create-infrastructure]
  - task: config-opsman-auth
    file: pcf-pipelines/tasks/config-opsman/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPS_MGR_USR: {{opsman_admin_username}}
      OPS_MGR_PWD: {{opsman_admin_password}}
      OM_DECRYPTION_PWD: {{opsman_admin_password}}
  - task: configure-director
    file: pcf-pipelines/install-pcf/aws/tasks/config-director/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPSMAN_USER: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      AWS_KEY_NAME: {{aws_key_name}}
      PEM: {{PEM}}
      AWS_REGION: {{aws_region}}
      S3_ENDPOINT: {{S3_ENDPOINT}}
      TRUSTED_CERTIFICATES: {{director_certificates}}
      ert_subnet_reserved_ranges_z1: {{ert_subnet_reserved_ranges_z1}}
      ert_subnet_reserved_ranges_z2: {{ert_subnet_reserved_ranges_z2}}
      ert_subnet_reserved_ranges_z3: {{ert_subnet_reserved_ranges_z3}}
      services_subnet_reserved_ranges_z1: {{services_subnet_reserved_ranges_z1}}
      services_subnet_reserved_ranges_z2: {{services_subnet_reserved_ranges_z2}}
      services_subnet_reserved_ranges_z3: {{services_subnet_reserved_ranges_z3}}
      dynamic_services_subnet_reserved_ranges_z1: {{dynamic_services_subnet_reserved_ranges_z1}}
      dynamic_services_subnet_reserved_ranges_z2: {{dynamic_services_subnet_reserved_ranges_z2}}
      dynamic_services_subnet_reserved_ranges_z3: {{dynamic_services_subnet_reserved_ranges_z3}}
      infra_subnet_reserved_ranges_z1: {{infra_subnet_reserved_ranges_z1}}

- name: deploy-director
  serial_groups: [opsman]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: terraform-state
      trigger: true
      passed: [configure-director]
  - task: deploy-director
    file: pcf-pipelines/tasks/apply-changes/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}

- name: upload-ert
  serial_groups: [opsman]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: pivnet-product
      resource: pivnet-elastic-runtime
      params:
        globs:
        - "cf*.pivotal"
    - get: terraform-state
      trigger: true
      passed: [deploy-director]
  - task: upload-tile
    file: pcf-pipelines/tasks/upload-product-and-stemcell/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPS_MGR_USR: {{opsman_admin_username}}
      OPS_MGR_PWD: {{opsman_admin_password}}
      PIVNET_API_TOKEN: {{pivnet_token}}
      IAAS: "aws"
      NO_PROXY: ""
      OM_IP: ""
  - task: stage-tile
    file: pcf-pipelines/tasks/stage-product/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}

- name: deploy-ert
  serial_groups: [opsman]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: terraform-state
      trigger: true
      passed: [upload-ert]

  - task: configure-ert
    file: pcf-pipelines/tasks/configure-ert/task.yml
    params:
      pcf_iaas: aws
      pcf_ert_domain: {{ERT_DOMAIN}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPS_MGR_USR: {{opsman_admin_username}}
      OPS_MGR_PWD: {{opsman_admin_password}}
      pcf_ert_ssl_cert: {{ERT_SSL_CERT}}
      pcf_ert_ssl_key: {{ERT_SSL_KEY}}
      pcf_az_1: {{aws_az1}}
      terraform_prefix: {{terraform_prefix}}
      S3_ENDPOINT: {{S3_ENDPOINT}}
      mysql_monitor_recipient_email: {{mysql_monitor_recipient_email}}
      MYSQL_BACKUPS: {{mysql_backups}}
      MYSQL_BACKUPS_SCP_SERVER: {{mysql_backups_scp_server}}
      MYSQL_BACKUPS_SCP_PORT: {{mysql_backups_scp_port}}
      MYSQL_BACKUPS_SCP_USER: {{mysql_backups_scp_user}}
      MYSQL_BACKUPS_SCP_KEY: {{mysql_backups_scp_key}}
      MYSQL_BACKUPS_SCP_DESTINATION: {{mysql_backups_scp_destination}}
      MYSQL_BACKUPS_SCP_CRON_SCHEDULE: {{mysql_backups_scp_cron_schedule}}
      MYSQL_BACKUPS_S3_ENDPOINT_URL: {{mysql_backups_s3_endpoint_url}}
      MYSQL_BACKUPS_S3_BUCKET_NAME: {{mysql_backups_s3_bucket_name}}
      MYSQL_BACKUPS_S3_BUCKET_PATH: {{mysql_backups_s3_bucket_path}}
      MYSQL_BACKUPS_S3_ACCESS_KEY_ID: {{mysql_backups_s3_access_key_id}}
      MYSQL_BACKUPS_S3_SECRET_ACCESS_KEY: {{mysql_backups_s3_secret_access_key}}
      MYSQL_BACKUPS_S3_CRON_SCHEDULE: {{mysql_backups_s3_cron_schedule}}
      HAPROXY_FORWARD_TLS: {{haproxy_forward_tls}}
      HAPROXY_BACKEND_CA: {{haproxy_backend_ca}}
      ROUTER_TLS_CIPHERS: {{router_tls_ciphers}}
      HAPROXY_TLS_CIPHERS: {{haproxy_tls_ciphers}}
      routing_disable_http: {{routing_disable_http}}
      INTERNET_CONNECTED: {{internet_connected}}
      CONTAINER_NETWORKING_NW_CIDR: {{container_networking_nw_cidr}}
      # IaaS Specific for GCP only
      gcp_storage_access_key:
      gcp_storage_secret_key:
      # db credentials
      db_app_usage_service_username: {{db_app_usage_service_username}}
      db_app_usage_service_password: {{db_app_usage_service_password}}
      db_autoscale_username: {{db_autoscale_username}}
      db_autoscale_password: {{db_autoscale_password}}
      db_diego_username: {{db_diego_username}}
      db_diego_password: {{db_diego_password}}
      db_notifications_username: {{db_notifications_username}}
      db_notifications_password: {{db_notifications_password}}
      db_routing_username: {{db_routing_username}}
      db_routing_password: {{db_routing_password}}
      db_uaa_username: {{db_uaa_username}}
      db_uaa_password: {{db_uaa_password}}
      db_ccdb_username: {{db_ccdb_username}}
      db_ccdb_password: {{db_ccdb_password}}
      db_accountdb_username: {{db_accountdb_username}}
      db_accountdb_password: {{db_accountdb_password}}
      db_networkpolicyserverdb_username: {{db_networkpolicyserverdb_username}}
      db_networkpolicyserverdb_password: {{db_networkpolicyserverdb_password}}
      db_nfsvolumedb_username: {{db_nfsvolumedb_username}}
      db_nfsvolumedb_password: {{db_nfsvolumedb_password}}
      db_locket_username: {{db_locket_username}}
      db_locket_password: {{db_locket_password}}
      db_silk_username: {{db_silk_username}}
      db_silk_password: {{db_silk_password}}
      SECURITY_ACKNOWLEDGEMENT: {{security_acknowledgement}}
      # azure specific
      pcf_ert_saml_cert:
      pcf_ert_saml_key:
      pcf_ert_networking_pointofentry:
      azure_access_key:
      azure_account_name:
      azure_buildpacks_container:
      azure_droplets_container:
      azure_packages_container:
      azure_resources_container:

  - task: disable-errands
    file: pcf-pipelines/tasks/disable-errands/task.yml
    params:
      PRODUCT_NAME: cf
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      ERRANDS_TO_DISABLE: {{ert_errands_to_disable}}

  - task: deploy-ert
    file: pcf-pipelines/tasks/apply-changes/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}

- name: wipe-env
  serial_groups: [terraform]
  ensure:
    put: terraform-state
    params:
      file: terraform-state/terraform.tfstate
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: terraform-state
  - task: wipe
    file: pcf-pipelines/install-pcf/aws/tasks/wipe-env/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
      AWS_REGION: {{aws_region}}
